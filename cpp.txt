#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define loop(a, n) for (int i = (a); i < (n); i++)
#define sp " "
#define el '\n'
#define eps 1e-6

#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a / __gcd(a, b)) * b

#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define pf push_front
#define pb push_back
#define eb emplace_back
#define rmf pop_front()
#define rmb pop_back()
#define sz(a) (int) (a).size()

#define yes cout << "Yes"
#define no cout << "No"

#define sf scanf
#define prf printf

#define debug(a) for (auto it: a) cout << it << sp; cout << el;
#define debugPair(a) for (auto it: a) cout << it.first << sp << it.second << el; cout << el;
#define testcase int TeCa; cin >> TeCa; while (TeCa--)
#define input freopen("input.txt", "r", stdin)
#define output freopen("output.txt", "w", stdout)

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

typedef vector<int> vecI;
typedef vector<bool> vecBl;
typedef vector<long long> vecLL;
typedef vector<char> vecCh;
typedef vector<string> vecStr;
typedef vector<vector<int>> Matrix;

typedef set<int> setI;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;
// find_by_order, order_of_key

typedef pair<int, int> pairII;
typedef pair<long long, long long> pairLL;

bool comp(pair<int, int> p1, pair<int, int> p2)
{
      if (p1.second == p2.second) return p1.first < p2.first;
      return p1.second < p2.second;
}

void preCalc()
{

}

void Solution()
{

}

int main()
{
      ios::sync_with_stdio(0);
      cin.tie(0); cout.tie(0);

      //preCalc();

      #ifndef ONLINE_JUDGE
            input;
      #endif

      //testcase
      Solution();

      return 0;
}
